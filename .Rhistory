filter(id %in% sampled_ids)
sampled_data[[as.character(sample_size)]]$data[[r]]$events_num <- sum(sampled_data[[as.character(sample_size)]]$data[[r]]$failed)
# estimation
model <- coxph(Surv(start, end, failed) ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
data = sampled_data[[as.character(sample_size)]]$data[[r]])
sampled_data[[as.character(sample_size)]]$est_betas[[r]] <- as.numeric(model$coefficients)
# prediction, score
predict_tmp <- predict(object=model,
newdata=sampled_data[["val_sim"]],
type="survival",
se.fit=FALSE,
na.action=na.pass)
sampled_data[[as.character(sample_size)]]$oos_auc[[r]] <- timeROC(T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=1-predict_tmp,
cause=1,
weighting="marginal",
times=c(12))$AUC
sampled_data[[as.character(sample_size)]]$oos_ppv[[r]] <- SeSpPPVNPV(cutpoint=0.1,
T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=(1-predict_tmp),
cause=1,
weighting = "marginal",
times=c(12),
iid = FALSE)$PPV
#sampled_data[[as.character(sample_size)]]$oos_bs[[r]] <- Brier(Surv_obj, predict_tmp, 60)
}
}
sum(sampled_data[["val_sim"]]$failed)
quantile(predict_tmp,0.1)
quantile(1-predict_tmp,0.1)
quantile(1-predict_tmp,0.9)
as.numeric(quantile(1-predict_tmp,0.9))
numeric(quantile(1-predict_tmp,0.9))
as.
as.numeric(quantile(1-predict_tmp,0.9))
for (sample_size in sample_sizes) {
sampled_data[[as.character(sample_size)]] <- list(ids = list(),
data = list(),
est_betas = list(),
oos_auc = list(),
oos_ppv = list())
for (r in 1:rep_times) {
unique_ids <- unique(simdata[[r]]$data$id)
sampled_ids <- as.numeric(sample(unique_ids, size = sample_size))
sampled_data[[as.character(sample_size)]]$ids[[r]] <- sampled_ids
sampled_data[[as.character(sample_size)]]$data[[r]] <- simdata[[r]]$data %>%
filter(id %in% sampled_ids)
sampled_data[[as.character(sample_size)]]$data[[r]]$events_num <- sum(sampled_data[[as.character(sample_size)]]$data[[r]]$failed)
# estimation
model <- coxph(Surv(start, end, failed) ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
data = sampled_data[[as.character(sample_size)]]$data[[r]])
sampled_data[[as.character(sample_size)]]$est_betas[[r]] <- as.numeric(model$coefficients)
# prediction, score
predict_tmp <- predict(object=model,
newdata=sampled_data[["val_sim"]],
type="survival",
se.fit=FALSE,
na.action=na.pass)
sampled_data[[as.character(sample_size)]]$oos_auc[[r]] <- timeROC(T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=1-predict_tmp,
cause=1,
weighting="marginal",
times=c(12))$AUC
sampled_data[[as.character(sample_size)]]$oos_ppv[[r]] <- SeSpPPVNPV(cutpoint=as.numeric(quantile(1-predict_tmp,0.9)),
T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=(1-predict_tmp),
cause=1,
weighting = "marginal",
times=c(12),
iid = FALSE)$PPV
#sampled_data[[as.character(sample_size)]]$oos_bs[[r]] <- Brier(Surv_obj, predict_tmp, 60)
}
}
sum(sampled_data[["val_sim"]]$failed) / length(sampled_data[["val_sim"]])
sum(sampled_data[["val_sim"]]$failed) / n(sampled_data[["val_sim"]])
sum(sampled_data[["val_sim"]]$failed) / nrow(sampled_data[["val_sim"]])
## Evaluation on in-sample
est_betas <- list()
for (sample_size in sample_sizes) {
est_betas[[as.character(sample_size)]] <- vector("list", covs_num)
for (i in 1:covs_num) {
for (r in 1:rep_times) {
est_betas[[as.character(sample_size)]][[i]] <- c(est_betas[[as.character(sample_size)]][[i]],
sampled_data[[as.character(sample_size)]]$est_betas[[r]][i])
}
}
}
evaluation <- list()
for (sample_size in sample_sizes) {
evaluation[[as.character(sample_size)]] <- list(mse = numeric(covs_num),
variance = numeric(covs_num),
bias = numeric(covs_num))
for (i in 1:covs_num) {
difftmp <- betas[i] - est_betas[[as.character(sample_size)]][[i]]
evaluation[[as.character(sample_size)]]$mse[i] <- mean(difftmp^2)
evaluation[[as.character(sample_size)]]$variance[i] <- var(est_betas[[as.character(sample_size)]][[i]])
evaluation[[as.character(sample_size)]]$bias[i] <- mean(difftmp)
#cat("Sample Size: ", sample_size, " - MSE: ", evaluation[[as.character(sample_size)]]$mse[i], "\n")
#cat("Sample Size: ", sample_size, " - Variance: ", evaluation[[as.character(sample_size)]]$variance[i], "\n")
#cat("Sample Size: ", sample_size, " - Bias: ", evaluation[[as.character(sample_size)]]$bias[i], "\n")
}
}
View(evaluation)
for (sample_size in sample_sizes) {
sampled_data[[as.character(sample_size)]] <- list(ids = list(),
data = list(),
est_betas = list(),
oos_auc = list(),
oos_ppv = list())
for (r in 1:rep_times) {
unique_ids <- unique(simdata[[r]]$data$id)
sampled_ids <- as.numeric(sample(unique_ids, size = sample_size))
sampled_data[[as.character(sample_size)]]$ids[[r]] <- sampled_ids
sampled_data[[as.character(sample_size)]]$data[[r]] <- simdata[[r]]$data %>%
filter(id %in% sampled_ids)
sampled_data[[as.character(sample_size)]]$data[[r]]$events_num <- sum(sampled_data[[as.character(sample_size)]]$data[[r]]$failed)
# estimation
model <- coxph(Surv(start, end, failed) ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
data = sampled_data[[as.character(sample_size)]]$data[[r]])
sampled_data[[as.character(sample_size)]]$est_betas[[r]] <- as.numeric(model$coefficients)
# prediction, score
predict_tmp <- predict(object=model,
newdata=sampled_data[["val_sim"]],
type="survival",
se.fit=FALSE,
na.action=na.pass)
sampled_data[[as.character(sample_size)]]$oos_auc[[r]] <- timeROC(T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=predict_tmp,
cause=1,
weighting="marginal",
times=c(12))$AUC
sampled_data[[as.character(sample_size)]]$oos_ppv[[r]] <- SeSpPPVNPV(cutpoint=as.numeric(quantile(1-predict_tmp,0.9)),
T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=(1-predict_tmp),
cause=1,
weighting = "marginal",
times=c(12),
iid = FALSE)$PPV
#sampled_data[[as.character(sample_size)]]$oos_bs[[r]] <- Brier(Surv_obj, predict_tmp, 60)
}
}
predict_tmp
for (sample_size in sample_sizes) {
sampled_data[[as.character(sample_size)]] <- list(ids = list(),
data = list(),
est_betas = list(),
oos_auc = list(),
oos_ppv = list())
for (r in 1:rep_times) {
unique_ids <- unique(simdata[[r]]$data$id)
sampled_ids <- as.numeric(sample(unique_ids, size = sample_size))
sampled_data[[as.character(sample_size)]]$ids[[r]] <- sampled_ids
sampled_data[[as.character(sample_size)]]$data[[r]] <- simdata[[r]]$data %>%
filter(id %in% sampled_ids)
sampled_data[[as.character(sample_size)]]$data[[r]]$events_num <- sum(sampled_data[[as.character(sample_size)]]$data[[r]]$failed)
# estimation
model <- coxph(Surv(start, end, failed) ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
data = sampled_data[[as.character(sample_size)]]$data[[r]])
sampled_data[[as.character(sample_size)]]$est_betas[[r]] <- as.numeric(model$coefficients)
# prediction, score
predict_tmp <- predict(object=model,
newdata=sampled_data[["val_sim"]],
type="survival",
se.fit=FALSE,
na.action=na.pass)
sampled_data[[as.character(sample_size)]]$oos_auc[[r]] <- timeROC(T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=predict_tmp,
cause=1,
weighting="marginal",
times=c(12))$AUC
sampled_data[[as.character(sample_size)]]$oos_ppv[[r]] <- SeSpPPVNPV(cutpoint=as.numeric(quantile(predict_tmp,0.1)),
T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=predict_tmp,
cause=1,
weighting = "marginal",
times=c(12),
iid = FALSE)$PPV
#sampled_data[[as.character(sample_size)]]$oos_bs[[r]] <- Brier(Surv_obj, predict_tmp, 60)
}
}
for (sample_size in sample_sizes) {
sampled_data[[as.character(sample_size)]] <- list(ids = list(),
data = list(),
est_betas = list(),
oos_auc = list(),
oos_ppv = list())
for (r in 1:rep_times) {
unique_ids <- unique(simdata[[r]]$data$id)
sampled_ids <- as.numeric(sample(unique_ids, size = sample_size))
sampled_data[[as.character(sample_size)]]$ids[[r]] <- sampled_ids
sampled_data[[as.character(sample_size)]]$data[[r]] <- simdata[[r]]$data %>%
filter(id %in% sampled_ids)
sampled_data[[as.character(sample_size)]]$data[[r]]$events_num <- sum(sampled_data[[as.character(sample_size)]]$data[[r]]$failed)
# estimation
model <- coxph(Surv(start, end, failed) ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
data = sampled_data[[as.character(sample_size)]]$data[[r]])
sampled_data[[as.character(sample_size)]]$est_betas[[r]] <- as.numeric(model$coefficients)
# prediction, score
predict_tmp <- predict(object=model,
newdata=sampled_data[["val_sim"]],
type="expect",
se.fit=FALSE,
na.action=na.pass)
sampled_data[[as.character(sample_size)]]$oos_auc[[r]] <- timeROC(T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=predict_tmp,
cause=1,
weighting="marginal",
times=c(12))$AUC
sampled_data[[as.character(sample_size)]]$oos_ppv[[r]] <- SeSpPPVNPV(cutpoint=as.numeric(quantile(predict_tmp,0.9)),
T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=predict_tmp,
cause=1,
weighting = "marginal",
times=c(12),
iid = FALSE)$PPV
#sampled_data[[as.character(sample_size)]]$oos_bs[[r]] <- Brier(Surv_obj, predict_tmp, 60)
}
}
predict_tmp
hist(predict_tmp)
for (sample_size in sample_sizes) {
sampled_data[[as.character(sample_size)]] <- list(ids = list(),
data = list(),
est_betas = list(),
oos_auc = list(),
oos_ppv = list())
for (r in 1:rep_times) {
unique_ids <- unique(simdata[[r]]$data$id)
sampled_ids <- as.numeric(sample(unique_ids, size = sample_size))
sampled_data[[as.character(sample_size)]]$ids[[r]] <- sampled_ids
sampled_data[[as.character(sample_size)]]$data[[r]] <- simdata[[r]]$data %>%
filter(id %in% sampled_ids)
sampled_data[[as.character(sample_size)]]$data[[r]]$events_num <- sum(sampled_data[[as.character(sample_size)]]$data[[r]]$failed)
# estimation
model <- coxph(Surv(start, end, failed) ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
data = sampled_data[[as.character(sample_size)]]$data[[r]])
sampled_data[[as.character(sample_size)]]$est_betas[[r]] <- as.numeric(model$coefficients)
# prediction, score
predict_tmp <- predict(object=model,
newdata=sampled_data[["val_sim"]],
type="survival",
se.fit=FALSE,
na.action=na.pass)
sampled_data[[as.character(sample_size)]]$oos_auc[[r]] <- timeROC(T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=1-predict_tmp,
cause=1,
weighting="marginal",
times=c(12))$AUC
sampled_data[[as.character(sample_size)]]$oos_ppv[[r]] <- SeSpPPVNPV(cutpoint=as.numeric(quantile(predict_tmp,0.9)),
T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=1-predict_tmp,
cause=1,
weighting = "marginal",
times=c(12),
iid = FALSE)$PPV
#sampled_data[[as.character(sample_size)]]$oos_bs[[r]] <- Brier(Surv_obj, predict_tmp, 60)
}
}
View(sampled_data_5k)
View(sampled_data_5k)
View(sampled_data)
1-predict_tmp
as.numeric(quantile(1-predict_tmp,0.9)
)
for (sample_size in sample_sizes) {
sampled_data[[as.character(sample_size)]] <- list(ids = list(),
data = list(),
est_betas = list(),
oos_auc = list(),
oos_ppv = list())
for (r in 1:rep_times) {
unique_ids <- unique(simdata[[r]]$data$id)
sampled_ids <- as.numeric(sample(unique_ids, size = sample_size))
sampled_data[[as.character(sample_size)]]$ids[[r]] <- sampled_ids
sampled_data[[as.character(sample_size)]]$data[[r]] <- simdata[[r]]$data %>%
filter(id %in% sampled_ids)
sampled_data[[as.character(sample_size)]]$data[[r]]$events_num <- sum(sampled_data[[as.character(sample_size)]]$data[[r]]$failed)
# estimation
model <- coxph(Surv(start, end, failed) ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
data = sampled_data[[as.character(sample_size)]]$data[[r]])
sampled_data[[as.character(sample_size)]]$est_betas[[r]] <- as.numeric(model$coefficients)
# prediction, score
predict_tmp <- predict(object=model,
newdata=sampled_data[["val_sim"]],
type="survival",
se.fit=FALSE,
na.action=na.pass)
sampled_data[[as.character(sample_size)]]$oos_auc[[r]] <- timeROC(T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=1-predict_tmp,
cause=1,
weighting="marginal",
times=c(12))$AUC
sampled_data[[as.character(sample_size)]]$oos_ppv[[r]] <- SeSpPPVNPV(cutpoint=as.numeric(quantile(1-predict_tmp,0.9)),
T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=1-predict_tmp,
cause=1,
weighting = "marginal",
times=c(12),
iid = FALSE)$PPV
#sampled_data[[as.character(sample_size)]]$oos_bs[[r]] <- Brier(Surv_obj, predict_tmp, 60)
}
}
replication_data <- data.frame(
Replication = rep(1:100, each = 2),  # 100回のレプリケーション
Metric = rep(c("AUC", "PPV"), times = 100),
Value = c(runif(100, 0.7, 0.9), runif(100, 0.3, 0.7))  # AUCとPPVのランダムな値
)
# ボックスプロットを作成
ggplot(replication_data, aes(x = Metric, y = Value, fill = Metric)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Replication Variation of AUC and PPV",
x = "Metric",
y = "Value")
#install.packages("coxed")
#link : https://search.r-project.org/CRAN/refmans/coxed/html/sim.survdata.html
library(coxed);library(dplyr);library(timeROC);library(SurvMetrics);library(ggplot2)
replication_data <- data.frame(
Replication = rep(1:100, each = 2),  # 100回のレプリケーション
Metric = rep(c("AUC", "PPV"), times = 100),
Value = c(runif(100, 0.7, 0.9), runif(100, 0.3, 0.7))  # AUCとPPVのランダムな値
)
# ボックスプロットを作成
ggplot(replication_data, aes(x = Metric, y = Value, fill = Metric)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Replication Variation of AUC and PPV",
x = "Metric",
y = "Value")
for (sample_size in sample_sizes) {
sampled_data[[as.character(sample_size)]] <- list(ids = list(),
data = list(),
est_betas = list(),
oos_auc = list(),
oos_ppv = list())
for (r in 1:rep_times) {
unique_ids <- unique(simdata[[r]]$data$id)
sampled_ids <- as.numeric(sample(unique_ids, size = sample_size))
sampled_data[[as.character(sample_size)]]$ids[[r]] <- sampled_ids
sampled_data[[as.character(sample_size)]]$data[[r]] <- simdata[[r]]$data %>%
filter(id %in% sampled_ids)
sampled_data[[as.character(sample_size)]]$data[[r]]$events_num <- sum(sampled_data[[as.character(sample_size)]]$data[[r]]$failed)
# estimation
model <- coxph(Surv(start, end, failed) ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
data = sampled_data[[as.character(sample_size)]]$data[[r]])
sampled_data[[as.character(sample_size)]]$est_betas[[r]] <- as.numeric(model$coefficients)
# prediction, score
predict_tmp <- predict(object=model,
newdata=sampled_data[["val_sim"]],
type="expected",
se.fit=FALSE,
na.action=na.pass)
sampled_data[[as.character(sample_size)]]$oos_auc[[r]] <- timeROC(T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=exp(-predict_tmp),
cause=1,
weighting="marginal",
times=c(12))$AUC
sampled_data[[as.character(sample_size)]]$oos_ppv[[r]] <- SeSpPPVNPV(cutpoint=as.numeric(quantile(exp(-predict_tmp),0.9)),
T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=exp(-predict_tmp),
cause=1,
weighting = "marginal",
times=c(12),
iid = FALSE)$PPV
#sampled_data[[as.character(sample_size)]]$oos_bs[[r]] <- Brier(Surv_obj, predict_tmp, 60)
}
}
hist(exp(-predict_tmp))
for (sample_size in sample_sizes) {
sampled_data[[as.character(sample_size)]] <- list(ids = list(),
data = list(),
est_betas = list(),
oos_auc = list(),
oos_ppv = list())
for (r in 1:rep_times) {
unique_ids <- unique(simdata[[r]]$data$id)
sampled_ids <- as.numeric(sample(unique_ids, size = sample_size))
sampled_data[[as.character(sample_size)]]$ids[[r]] <- sampled_ids
sampled_data[[as.character(sample_size)]]$data[[r]] <- simdata[[r]]$data %>%
filter(id %in% sampled_ids)
sampled_data[[as.character(sample_size)]]$data[[r]]$events_num <- sum(sampled_data[[as.character(sample_size)]]$data[[r]]$failed)
# estimation
model <- coxph(Surv(start, end, failed) ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
data = sampled_data[[as.character(sample_size)]]$data[[r]])
sampled_data[[as.character(sample_size)]]$est_betas[[r]] <- as.numeric(model$coefficients)
# prediction, score
predict_tmp <- predict(object=model,
newdata=sampled_data[["val_sim"]],
type="expected",
se.fit=FALSE,
na.action=na.pass)
sampled_data[[as.character(sample_size)]]$oos_auc[[r]] <- timeROC(T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=predict_tmp,
cause=1,
weighting="marginal",
times=c(12))$AUC
sampled_data[[as.character(sample_size)]]$oos_ppv[[r]] <- SeSpPPVNPV(cutpoint=as.numeric(quantile(predict_tmp,0.9)),
T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=predict_tmp,
cause=1,
weighting = "marginal",
times=c(12),
iid = FALSE)$PPV
#sampled_data[[as.character(sample_size)]]$oos_bs[[r]] <- Brier(Surv_obj, predict_tmp, 60)
}
}
for (sample_size in sample_sizes) {
sampled_data[[as.character(sample_size)]] <- list(ids = list(),
data = list(),
est_betas = list(),
oos_auc = list(),
oos_ppv = list())
for (r in 1:rep_times) {
unique_ids <- unique(simdata[[r]]$data$id)
sampled_ids <- as.numeric(sample(unique_ids, size = sample_size))
sampled_data[[as.character(sample_size)]]$ids[[r]] <- sampled_ids
sampled_data[[as.character(sample_size)]]$data[[r]] <- simdata[[r]]$data %>%
filter(id %in% sampled_ids)
sampled_data[[as.character(sample_size)]]$data[[r]]$events_num <- sum(sampled_data[[as.character(sample_size)]]$data[[r]]$failed)
# estimation
model <- coxph(Surv(start, end, failed) ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
data = sampled_data[[as.character(sample_size)]]$data[[r]])
sampled_data[[as.character(sample_size)]]$est_betas[[r]] <- as.numeric(model$coefficients)
# prediction, score
predict_tmp <- predict(object=model,
newdata=sampled_data[["val_sim"]],
type="expected",
se.fit=FALSE,
na.action=na.pass)
sampled_data[[as.character(sample_size)]]$oos_auc[[r]] <- timeROC(T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=predict_tmp,
cause=1,
weighting="marginal",
times=c(12))$AUC
sampled_data[[as.character(sample_size)]]$oos_ppv[[r]] <- SeSpPPVNPV(cutpoint=as.numeric(quantile(predict_tmp,0.9)),
T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=predict_tmp,
cause=1,
weighting = "marginal",
times=c(12),
iid = FALSE)$PPV
#sampled_data[[as.character(sample_size)]]$oos_bs[[r]] <- Brier(Surv_obj, predict_tmp, 60)
}
}
for (sample_size in sample_sizes) {
sampled_data[[as.character(sample_size)]] <- list(ids = list(),
data = list(),
est_betas = list(),
oos_auc = list(),
oos_ppv = list())
for (r in 1:rep_times) {
unique_ids <- unique(simdata[[r]]$data$id)
sampled_ids <- as.numeric(sample(unique_ids, size = sample_size))
sampled_data[[as.character(sample_size)]]$ids[[r]] <- sampled_ids
sampled_data[[as.character(sample_size)]]$data[[r]] <- simdata[[r]]$data %>%
filter(id %in% sampled_ids)
sampled_data[[as.character(sample_size)]]$data[[r]]$events_num <- sum(sampled_data[[as.character(sample_size)]]$data[[r]]$failed)
# estimation
model <- coxph(Surv(start, end, failed) ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10,
data = sampled_data[[as.character(sample_size)]]$data[[r]])
sampled_data[[as.character(sample_size)]]$est_betas[[r]] <- as.numeric(model$coefficients)
# prediction, score
predict_tmp <- predict(object=model,
newdata=sampled_data[["val_sim"]],
type="expected",
se.fit=FALSE,
na.action=na.pass)
sampled_data[[as.character(sample_size)]]$oos_auc[[r]] <- timeROC(T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=exp(-predict_tmp),
cause=1,
weighting="marginal",
times=c(12))$AUC
sampled_data[[as.character(sample_size)]]$oos_ppv[[r]] <- SeSpPPVNPV(cutpoint=as.numeric(quantile(predict_tmp,0.9)),
T=sampled_data[["val_sim"]]$end,
delta=sampled_data[["val_sim"]]$failed,
marker=predict_tmp,
cause=1,
weighting = "marginal",
times=c(12),
iid = FALSE)$PPV
#sampled_data[[as.character(sample_size)]]$oos_bs[[r]] <- Brier(Surv_obj, predict_tmp, 60)
}
}
# ボックスプロットを作成
ggplot(replication_data, aes(x = Metric, y = Value, fill = Metric)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Replication Variation of AUC and PPV",
x = "Metric",
y = "Value")
save.image("~/Desktop/simulation_coxph/sim_coxphtv/231207_environment.RData")
